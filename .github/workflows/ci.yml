name: Python package

on: [pull_request, push]

jobs:
  build:

    runs-on: ubuntu-latest
    strategy:
      matrix:
        python-version: [3.7, 3.8, 3.9]

    steps:
    - uses: actions/checkout@v3

    - name: Set up Python ${{ matrix.python-version }}
      uses: actions/setup-python@v4
      with:
        python-version: ${{ matrix.python-version }}

    - name: Install requirements
      run: |
        sudo apt-get update
        sudo apt-get install -y antlr4 libantlr4-runtime-dev python3-dev yosys
        python3 -m pip install --upgrade pip
        python3 -m pip install setuptools flake8 pytest wheel
        python3 -m pip install git+https://github.com/antmicro/tuttest

    - name: Set up F4PGA
      run: |
        export FPGA_FAM="xc7"
        export F4PGA_INSTALL_DIR="${HOME}/opt/f4pga"
        export F4PGA_INSTALL_DIR_FAM="${F4PGA_INSTALL_DIR}/${FPGA_FAM}"
        ./.github/scripts/prepare_environment.sh
        source .github/scripts/activate.sh
        pip3 install https://github.com/chipsalliance/f4pga/archive/main.zip#subdirectory=f4pga

    - name: Lint with flake8
      run: |
        flake8 fpga_topwrap --count --show-source --statistics

    - name: Build
      run: |
        tuttest README.md | bash -

    - name: Test with pytest
      run: |
        pytest

    - name: Generate sources for example HDMI setup
      run: |
          cd examples/hdmi
          tuttest README.md generate | bash -
          cd -

    - name: Build example PWM setup
      run: |
          export FPGA_FAM="xc7"
          export F4PGA_INSTALL_DIR="${HOME}/opt/f4pga"
          export F4PGA_INSTALL_DIR_FAM="${F4PGA_INSTALL_DIR}/${FPGA_FAM}"
          source .github/scripts/activate.sh
          cd examples/pwm
          tuttest README.md build | bash -
          cd -
          cp examples/pwm/build/project_1_0/zynq-symbiflow/project_top.bit ./top.bit

    - name: Store bit
      uses: actions/upload-artifact@v3
      with:
        name: top.bit
        path: top.bit
